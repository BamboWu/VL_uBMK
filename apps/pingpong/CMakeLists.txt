project(VL_uBMK)

cmake_minimum_required(VERSION 3.1)

find_package(Boost QUIET COMPONENTS atomic)
find_package(GccAtomic QUIET)

if(Boost_ATOMIC_FOUND)
  include_directories(${Boost_INCLUDE_DIRS})
  link_directories(${Boost_LIBRARY_DIRS})
  add_microbenchmark(pingpong pingpong.cpp)
  target_link_libraries(pingpong ${Boost_LIBRARIES})
elseif(GCCLIBATOMIC_FOUND)
  find_file(Boost_LOCKFREE_QUEUE_HPP "boost/lockfree/queue.hpp"
            PATHS ${Boost_INCLUDE_DIRS})
  if(Boost_LOCKFREE_QUEUE_HPP)
    add_microbenchmark(pingpong pingpong.cpp)
    set_target_properties(pingpong PROPERTIES COMPILE_DEFINITIONS "GCCATOMIC")
    target_link_libraries(pingpong atomic)
  else(Boost_LOCKFREE_QUEUE_HPP)
    MESSAGE(STATUS "WARNING: No boost/lockfree/queue.hpp, skip pingpong.")
  endif(Boost_LOCKFREE_QUEUE_HPP)
else()
  MESSAGE(STATUS "WARNING: No atomic library, skip pingpong.")
endif()
