project(VL_uBMK)

cmake_minimum_required(VERSION 3.1)

# check boost libraries
find_package(Boost QUIET COMPONENTS atomic thread chrono)
include_directories(${Boost_INCLUDE_DIRS})
link_directories(${Boost_LIBRARY_DIRS})

# check whether there is an alternative GNU atomic library
if(NOT Boost_ATOMIC_FOUND)
  find_package(GccAtomic QUIET)
endif()

find_file(Boost_LOCKFREE_QUEUE_HPP "boost/lockfree/queue.hpp" ${Boost_INCLUDE_DIRS})

if(NOT (Boost_ATOMIC_FOUND OR GCCLIBATOMIC_FOUND))
  MESSAGE(STATUS "WARNING: No atomic library, skip pingpong.")
else()
  if(NOT Boost_LOCKFREE_QUEUE_HPP)
    MESSAGE(STATUS "WARNING: No boost/lockfree/queue.hpp, skip pingpong_boost.")
  else()
    add_microbenchmark(pingpong_boost pingpong.cpp)
    target_link_libraries(pingpong_boost ${Boost_LIBRARIES})
    if(NOT Boost_ATOMIC_FOUND)
      target_compile_definitions(pingpong_boost PRIVATE -DSTDATOMIC)
      target_link_libraries(pingpong_boost atomic)
    endif()
    if(NOT Boost_THREAD_FOUND)
      # fall back to use pthread library find in the top CMakeLists.txt
      target_compile_definitions(pingpong_boost PRIVATE -DSTDTHREAD)
    endif()
    if(NOT Boost_CHRONO_FOUND)
      target_compile_definitions(pingpong_boost PRIVATE -DSTDCHRONO)
    endif()
  endif(NOT Boost_LOCKFREE_QUEUE_HPP)
  if(NOT LIBVL_FOUND)
    MESSAGE(STATUS "WARNING: No libvl found, skip pingpong_vl.")
  else()
    add_microbenchmark(pingpong_vl pingpong.cpp)
    target_compile_definitions(pingpong_vl PRIVATE -DVL)
    if(NOT Boost_ATOMIC_FOUND)
      target_compile_definitions(pingpong_vl PRIVATE -DSTDATOMIC)
      target_link_libraries(pingpong_vl atomic)
    endif()
    if(NOT Boost_THREAD_FOUND)
      # fall back to use pthread library find in the top CMakeLists.txt
      target_compile_definitions(pingpong_vl PRIVATE -DSTDTHREAD)
    endif()
    if(NOT Boost_CHRONO_FOUND)
      target_compile_definitions(pingpong_vl PRIVATE -DSTDCHRONO)
    endif()
    add_microbenchmark(pingpong_verbose pingpong.cpp)
    target_compile_definitions(pingpong_verbose PRIVATE -DVL -DVERBOSE)
    if(NOT Boost_ATOMIC_FOUND)
      target_compile_definitions(pingpong_verbose PRIVATE -DSTDATOMIC)
      target_link_libraries(pingpong_verbose atomic)
    endif()
    if(NOT Boost_THREAD_FOUND)
      # fall back to use pthread library find in the top CMakeLists.txt
      target_compile_definitions(pingpong_verbose PRIVATE -DSTDTHREAD)
    endif()
    if(NOT Boost_CHRONO_FOUND)
      target_compile_definitions(pingpong_verbose PRIVATE -DSTDCHRONO)
    endif()
  endif(NOT LIBVL_FOUND)
endif()
